{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"New Phaser 3 Scene": {
		"scope": "typescript",
		"prefix": "phaser-3-scene",
		"body": [
			"export default class ${1:name} extends Phaser.Scene {",
			"\t/**",
			"\t * Unique name of the scene.",
			"\t */",
			"\tpublic static Name: string = \"${1:name}\";",
			"",
			"\tpublic preload(): void {",
			"\t}",
			"",
			"\tpublic create(): void {",
			"\t\t// Add this new scene to ../Game.ts to be able to use it.",
			"\t}",
			"}",
			""
		],
		"description": "Adds a new Phaser 3 scene."
	},
	"Load Image in Phaser 3": {
		"scope": "typescript",
		"prefix": "phaser-3-load-image",
		"body": [
			"this.load.image(\"{1:key}\", \"{2:file-path-and-name}\");"
		],
		"description": "Load an image."
	},
	"Load Image in Phaser 3 With Default Extension": {
		"scope": "typescript",
		"prefix": "phaser-3-load-image-no-extension",
		"body": [
			"this.load.image(\"{1:file-name-without-extension}\");"
		],
		"description": "Load an image with Phaser determining the extension."
	}
}
